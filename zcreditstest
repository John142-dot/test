local ZCredits = {}

-- Define colors
local TEXT_COLOR = Color3.new(1, 1, 1) -- White text
local BACKGROUND_COLOR_START = Color3.fromRGB(30, 30, 60) -- Dark blue background

-- Create the GUI elements
function ZCredits:CreateCreditsUI(soundId, ownerImageId, contributorImageId, testerImageId)
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")
    local SoundService = game:GetService("SoundService")

    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create Credits Frame
    local CreditsFrame = Instance.new("Frame")
    CreditsFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
    CreditsFrame.Position = UDim2.new(0.25, 0, 1.1, 0) -- Start off-screen
    CreditsFrame.BackgroundColor3 = BACKGROUND_COLOR_START
    CreditsFrame.Parent = ScreenGui

    -- Create a UICorner to give it a squircle shape
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0.2, 0)
    UICorner.Parent = CreditsFrame

    -- Function to create a label with an image
    local function createLabelWithImage(text, position, imageId)
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0.75, 0, 0, 50)
        label.Position = position
        label.TextColor3 = TEXT_COLOR
        label.BackgroundTransparency = 1
        label.Text = text
        label.Parent = CreditsFrame

        local imageLabel = Instance.new("ImageLabel")
        imageLabel.Size = UDim2.new(0.1, 0, 0.8, 0) -- Adjust size as needed
        imageLabel.Position = UDim2.new(0.8, 0, 0.1, 0) -- Position next to the text
        imageLabel.Image = imageId -- Set the image ID
        imageLabel.BackgroundTransparency = 1
        imageLabel.Parent = CreditsFrame

        return label, imageLabel
    end

    -- Add default labels with placeholder images
    self.OwnerLabel, self.OwnerImage = createLabelWithImage("Owner: YourName", UDim2.new(0, 0, 0.1, 0), ownerImageId)
    self.ContributorsLabel, self.ContributorsImage = createLabelWithImage("Contributors: Contributor1, Contributor2", UDim2.new(0, 0, 0.3, 0), contributorImageId)
    self.TestersLabel, self.TestersImage = createLabelWithImage("Testers: Tester1, Tester2", UDim2.new(0, 0, 0.5, 0), testerImageId)

    -- Set up the OK Button
    local OKButton = Instance.new("TextButton")
    OKButton.Size = UDim2.new(0.2, 0, 0.1, 0)
    OKButton.Position = UDim2.new(0.4, 0, 0.65, 0)
    OKButton.Text = "OK"
    OKButton.TextColor3 = Color3.fromRGB(0, 255, 0) -- Green text for the OK button
    OKButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Dark background for the button
    OKButton.Parent = CreditsFrame

    -- Sound setup
    self.sound = Instance.new("Sound")
    self.sound.SoundId = soundId -- Set the sound ID
    self.sound.Volume = 0.5
    self.sound.Parent = SoundService

    -- Play sound when credits GUI is displayed
    self.sound:Play()

    -- Tween the credits frame into view
    local slideTweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local slideTween = TweenService:Create(CreditsFrame, slideTweenInfo, {Position = UDim2.new(0.25, 0, 0.25, 0)})
    slideTween:Play()

    -- Function to close the credits
    local function closeCredits()
        local slideTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
        local slideTween = TweenService:Create(CreditsFrame, slideTweenInfo, {Position = UDim2.new(0.25, 0, 1.1, 0)})
        slideTween:Play()
        slideTween.Completed:Wait() -- Wait for the slide to finish
        ScreenGui:Destroy() -- Destroy the GUI
    end

    -- Connect the OK button
    OKButton.MouseButton1Click:Connect(closeCredits)
end

-- Function to set credit names
function ZCredits:SetCreditName(creditType, name)
    if creditType == "owner" then
        self.OwnerLabel.Text = "Owner: " .. name
    elseif creditType == "contributor" then
        self.ContributorsLabel.Text = self.ContributorsLabel.Text .. ", " .. name
    elseif creditType == "tester" then
        self.TestersLabel.Text = self.TestersLabel.Text .. ", " .. name
    end
end

-- Initialize the credits UI
function ZCredits:Init(soundId, ownerImageId, contributorImageId, testerImageId)
    self:CreateCreditsUI(soundId, ownerImageId, contributorImageId, testerImageId)
end

return ZCredits
